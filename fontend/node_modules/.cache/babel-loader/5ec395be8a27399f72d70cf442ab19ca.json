{"ast":null,"code":"import _objectSpread from \"D:/Code/cnpm/ban-hang-gia-dung-frontend/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _toConsumableArray from \"D:/Code/cnpm/ban-hang-gia-dung-frontend/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nexport var CartReducer = function CartReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    cartItems: []\n  };\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case \"ADD_TO_CART\":\n      {\n        var newList = _toConsumableArray(state.cartItems);\n\n        var exists = newList.find(function (item) {\n          return item._id === action.payload._id;\n        });\n\n        if (exists) {\n          newList = newList.map(function (item) {\n            return item._id === action.payload._id ? _objectSpread(_objectSpread({}, exists), {}, {\n              qty: exists.qty + 1\n            }) : item;\n          });\n        } else {\n          var product = _objectSpread(_objectSpread({}, action.payload), {}, {\n            qty: 1\n          });\n\n          newList.push(product);\n        }\n\n        localStorage.setItem(\"cartItems\", JSON.stringify(newList));\n        return _objectSpread(_objectSpread({}, state), {}, {\n          cartItems: newList\n        });\n      }\n\n    case \"DELETE_TO_CART\":\n      {\n        var _newList = _toConsumableArray(state.cartItems);\n\n        var _exists = _newList.find(function (item) {\n          return item._id === action.payload._id;\n        });\n\n        if (_exists.qty === 1) {\n          _newList = _newList.filter(function (item) {\n            return item._id !== _exists._id;\n          });\n        } else {\n          _newList = _newList.map(function (item) {\n            return item._id === action.payload._id ? _objectSpread(_objectSpread({}, _exists), {}, {\n              qty: _exists.qty - 1\n            }) : item;\n          });\n        }\n\n        localStorage.setItem(\"cartItems\", JSON.stringify(_newList));\n        return _objectSpread(_objectSpread({}, state), {}, {\n          cartItems: _newList\n        });\n      }\n\n    case \"DELETE_QTY_PRODUCT\":\n      {\n        var _newList2 = _toConsumableArray(state.cartItems);\n\n        _newList2 = _newList2.filter(function (item) {\n          return item._id !== action.payload._id;\n        });\n        localStorage.setItem(\"cartItems\", JSON.stringify(_newList2));\n        return _objectSpread(_objectSpread({}, state), {}, {\n          cartItems: _newList2\n        });\n      }\n\n    case \"CART_EMTY\":\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          cartItems: []\n        });\n      }\n\n    default:\n      return state;\n  }\n};\n_c = CartReducer;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartReducer\");","map":{"version":3,"sources":["D:/Code/cnpm/ban-hang-gia-dung-frontend/frontend/src/reducers/CartReducer.js"],"names":["CartReducer","state","cartItems","action","type","newList","exists","find","item","_id","payload","map","qty","product","push","localStorage","setItem","JSON","stringify","filter"],"mappings":"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","sourcesContent":["export const CartReducer = (state = { cartItems: [] }, action) => {\n  switch (action.type) {\n    case \"ADD_TO_CART\": {\n      let newList = [...state.cartItems];\n      const exists = newList.find((item) => item._id === action.payload._id);\n      if (exists) {\n        newList = newList.map((item) =>\n          item._id === action.payload._id\n            ? { ...exists, qty: exists.qty + 1 }\n            : item\n        );\n      } else {\n        const product = {\n          ...action.payload,\n          qty: 1,\n        };\n        newList.push(product);\n      }\n\n      localStorage.setItem(\"cartItems\", JSON.stringify(newList));\n      return {\n        ...state,\n        cartItems: newList,\n      };\n    }\n\n    case \"DELETE_TO_CART\": {\n      let newList = [...state.cartItems];\n      const exists = newList.find((item) => item._id === action.payload._id);\n      if (exists.qty === 1) {\n        newList = newList.filter((item) => item._id !== exists._id);\n      } else {\n        newList = newList.map((item) =>\n          item._id === action.payload._id\n            ? { ...exists, qty: exists.qty - 1 }\n            : item\n        );\n      }\n\n      localStorage.setItem(\"cartItems\", JSON.stringify(newList));\n      return {\n        ...state,\n        cartItems: newList,\n      };\n    }\n\n    case \"DELETE_QTY_PRODUCT\": {\n      let newList = [...state.cartItems];\n\n      newList = newList.filter((item) => item._id !== action.payload._id);\n\n      localStorage.setItem(\"cartItems\", JSON.stringify(newList));\n      return {\n        ...state,\n        cartItems: newList,\n      };\n    }\n\n    case \"CART_EMTY\": {\n      return { ...state, cartItems: [] };\n    }\n    default:\n      return state;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}