{"ast":null,"code":"import _toConsumableArray from \"D:/Code/cnpm/ban-hang-gia-dung-frontend/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"D:/Code/cnpm/ban-hang-gia-dung-frontend/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nexport var ChatReducer = function ChatReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case \"GET_ALL_CONVERSATION\":\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          conversationList: action.payload\n        });\n      }\n\n    case \"UPDATE_ID_CONVERSATION\":\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          idConversation: action.payload._id,\n          nameConversation: action.payload.nameConversation\n        });\n      }\n\n    case \"UPDATE_LAST_MESSAGE_CONVERSATION\":\n      {\n        var arr = _toConsumableArray(state.conversationList);\n\n        var index = arr.findIndex(function (item) {\n          return item.idUser === action.payload.idUser;\n        });\n        arr[index] = action.payload;\n        return _objectSpread(_objectSpread({}, state), {}, {\n          conversationList: arr\n        });\n      }\n\n    case \"SHOW_CONVERSATION\":\n      {\n        var _arr = _toConsumableArray(state.conversationList);\n\n        var _index = _arr.findIndex(function (item) {\n          return item.idUser === action.payload.idUser;\n        });\n\n        var newConversation = action.payload;\n\n        if (_index < 0) {\n          _arr.push(newConversation);\n        }\n\n        return _objectSpread(_objectSpread({}, state), {}, {\n          conversationList: _arr\n        });\n      }\n\n    case \"SEEN_CONVERSATION\":\n      {\n        var _arr2 = _toConsumableArray(state.conversationList);\n\n        var _index2 = _arr2.findIndex(function (item) {\n          return item.idUser === action.payload.idUser;\n        });\n\n        var _newConversation = action.payload;\n\n        if (_index2 < 0) {\n          _arr2.push(_newConversation);\n        }\n\n        return _objectSpread(_objectSpread({}, state), {}, {\n          conversationList: _arr2\n        });\n      }\n\n    default:\n      return state;\n  }\n};\n_c = ChatReducer;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatReducer\");","map":{"version":3,"sources":["D:/Code/cnpm/ban-hang-gia-dung-frontend/frontend/src/reducers/ChatReducer.js"],"names":["ChatReducer","state","action","type","conversationList","payload","idConversation","_id","nameConversation","arr","index","findIndex","item","idUser","newConversation","push"],"mappings":";;AAAA,OAAO,IAAMA,WAAW,GAAG,SAAdA,WAAc,GAAwB;AAAA,MAAvBC,KAAuB,uEAAf,EAAe;AAAA,MAAXC,MAAW;;AACjD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,sBAAL;AAA6B;AAC3B,+CAAYF,KAAZ;AAAmBG,UAAAA,gBAAgB,EAAEF,MAAM,CAACG;AAA5C;AACD;;AAED,SAAK,wBAAL;AAA+B;AAC7B,+CACKJ,KADL;AAEEK,UAAAA,cAAc,EAAEJ,MAAM,CAACG,OAAP,CAAeE,GAFjC;AAGEC,UAAAA,gBAAgB,EAAEN,MAAM,CAACG,OAAP,CAAeG;AAHnC;AAKD;;AAED,SAAK,kCAAL;AAAyC;AACvC,YAAMC,GAAG,sBAAOR,KAAK,CAACG,gBAAb,CAAT;;AACA,YAAMM,KAAK,GAAGD,GAAG,CAACE,SAAJ,CACZ,UAACC,IAAD;AAAA,iBAAUA,IAAI,CAACC,MAAL,KAAgBX,MAAM,CAACG,OAAP,CAAeQ,MAAzC;AAAA,SADY,CAAd;AAGAJ,QAAAA,GAAG,CAACC,KAAD,CAAH,GAAaR,MAAM,CAACG,OAApB;AAEA,+CAAYJ,KAAZ;AAAmBG,UAAAA,gBAAgB,EAAEK;AAArC;AACD;;AAED,SAAK,mBAAL;AAA0B;AACxB,YAAMA,IAAG,sBAAOR,KAAK,CAACG,gBAAb,CAAT;;AACA,YAAMM,MAAK,GAAGD,IAAG,CAACE,SAAJ,CACZ,UAACC,IAAD;AAAA,iBAAUA,IAAI,CAACC,MAAL,KAAgBX,MAAM,CAACG,OAAP,CAAeQ,MAAzC;AAAA,SADY,CAAd;;AAGA,YAAMC,eAAe,GAAGZ,MAAM,CAACG,OAA/B;;AACA,YAAIK,MAAK,GAAG,CAAZ,EAAe;AACbD,UAAAA,IAAG,CAACM,IAAJ,CAASD,eAAT;AACD;;AAED,+CAAYb,KAAZ;AAAmBG,UAAAA,gBAAgB,EAAEK;AAArC;AACD;;AAED,SAAK,mBAAL;AAA0B;AACxB,YAAMA,KAAG,sBAAOR,KAAK,CAACG,gBAAb,CAAT;;AACA,YAAMM,OAAK,GAAGD,KAAG,CAACE,SAAJ,CACZ,UAACC,IAAD;AAAA,iBAAUA,IAAI,CAACC,MAAL,KAAgBX,MAAM,CAACG,OAAP,CAAeQ,MAAzC;AAAA,SADY,CAAd;;AAGA,YAAMC,gBAAe,GAAGZ,MAAM,CAACG,OAA/B;;AACA,YAAIK,OAAK,GAAG,CAAZ,EAAe;AACbD,UAAAA,KAAG,CAACM,IAAJ,CAASD,gBAAT;AACD;;AAED,+CAAYb,KAAZ;AAAmBG,UAAAA,gBAAgB,EAAEK;AAArC;AACD;;AAED;AACE,aAAOR,KAAP;AAlDJ;AAoDD,CArDM;KAAMD,W","sourcesContent":["export const ChatReducer = (state = {}, action) => {\n  switch (action.type) {\n    case \"GET_ALL_CONVERSATION\": {\n      return { ...state, conversationList: action.payload };\n    }\n\n    case \"UPDATE_ID_CONVERSATION\": {\n      return {\n        ...state,\n        idConversation: action.payload._id,\n        nameConversation: action.payload.nameConversation,\n      };\n    }\n\n    case \"UPDATE_LAST_MESSAGE_CONVERSATION\": {\n      const arr = [...state.conversationList];\n      const index = arr.findIndex(\n        (item) => item.idUser === action.payload.idUser\n      );\n      arr[index] = action.payload;\n\n      return { ...state, conversationList: arr };\n    }\n\n    case \"SHOW_CONVERSATION\": {\n      const arr = [...state.conversationList];\n      const index = arr.findIndex(\n        (item) => item.idUser === action.payload.idUser\n      );\n      const newConversation = action.payload;\n      if (index < 0) {\n        arr.push(newConversation);\n      }\n\n      return { ...state, conversationList: arr };\n    }\n\n    case \"SEEN_CONVERSATION\": {\n      const arr = [...state.conversationList];\n      const index = arr.findIndex(\n        (item) => item.idUser === action.payload.idUser\n      );\n      const newConversation = action.payload;\n      if (index < 0) {\n        arr.push(newConversation);\n      }\n\n      return { ...state, conversationList: arr };\n    }\n\n    default:\n      return state;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}