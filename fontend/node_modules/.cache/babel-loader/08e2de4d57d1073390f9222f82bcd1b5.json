{"ast":null,"code":"import _regeneratorRuntime from \"D:/Code/cnpm/ban-hang-gia-dung-frontend/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"D:/Code/cnpm/ban-hang-gia-dung-frontend/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport axios from \"axios\";\nexport var getDashboardAction = function getDashboardAction() {\n  return /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch) {\n      var _yield$axios$get, data;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return axios.get(\"http://localhost:4000/dashboard\");\n\n            case 3:\n              _yield$axios$get = _context.sent;\n              data = _yield$axios$get.data;\n              dispatch({\n                type: \"GET_DASHBOARD\",\n                payload: data\n              });\n              _context.next = 11;\n              break;\n\n            case 8:\n              _context.prev = 8;\n              _context.t0 = _context[\"catch\"](0);\n              dispatch({\n                type: \"GET_DASHBOARD_FAIL\",\n                payload: _context.t0.message\n              });\n\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 8]]);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n};","map":{"version":3,"sources":["D:/Code/cnpm/ban-hang-gia-dung-frontend/frontend/src/actions/DashboardAction.js"],"names":["axios","getDashboardAction","dispatch","get","data","type","payload","message"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB;AAAA;AAAA,wEAAM,iBAAOC,QAAP;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAEbF,KAAK,CAACG,GAAN,mCAFa;;AAAA;AAAA;AAE5BC,cAAAA,IAF4B,oBAE5BA,IAF4B;AAGpCF,cAAAA,QAAQ,CAAC;AAAEG,gBAAAA,IAAI,EAAE,eAAR;AAAyBC,gBAAAA,OAAO,EAAEF;AAAlC,eAAD,CAAR;AAHoC;AAAA;;AAAA;AAAA;AAAA;AAKpCF,cAAAA,QAAQ,CAAC;AAAEG,gBAAAA,IAAI,EAAE,oBAAR;AAA8BC,gBAAAA,OAAO,EAAE,YAAMC;AAA7C,eAAD,CAAR;;AALoC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAN;;AAAA;AAAA;AAAA;AAAA;AAAA,CAA3B","sourcesContent":["import axios from \"axios\";\n\nexport const getDashboardAction = () => async (dispatch) => {\n  try {\n    const { data } = await axios.get(`http://localhost:4000/dashboard`);\n    dispatch({ type: \"GET_DASHBOARD\", payload: data });\n  } catch (error) {\n    dispatch({ type: \"GET_DASHBOARD_FAIL\", payload: error.message });\n  }\n};\n"]},"metadata":{},"sourceType":"module"}